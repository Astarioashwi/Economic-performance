install.packages("xlsx")
install.packages("rJava")
#Install Packages
install.packages("tidyverse")
install.packages("ipumsr")
install.packages("R.utils")
install.packages("writexl")
install.packages("readxl")
install.packages("openxlsx")
install.packages("janitor")
install.packages("xlsx")
install.packages("rJava")
install.packages("dplyr")
install.packages("magrittr")
library(magrittr)
library(R.utils)
library(ipumsr)
library(tidyverse)
library(dplyr)
library(purrr)
library(writexl)
library(readxl)
library(openxlsx)
library(xml2)
library(rvest)
library(readr)
library(janitor)
library(scales)
library(rJava)
library(xlsx)
library(readxl)
library(httr)
setwd("C:/Users/HP/Desktop/CBPR")
ddi <- read_ipums_ddi("usa_00006.xml")
data <- read_ipums_micro(ddi)
data_state <- filter(data, STATEFIP == 6) # State - California
data_county <- filter(data_state, COUNTYFIP == 99)  # County - Stanislaus
data_Income <- filter(data_county, HHINCOME < 9999999) #Income less than 9.99 Million
data_fams1 <-  filter(data_Income, NFAMS == 1) # Number of Families per household = 1
data_filtered1 <- data_fams1
data_filtered1
data_filtered1$NAdults <- with(data_filtered1, ifelse((AGE > 17 & AGE < 65), '1','0'))
data_filtered1$WorkingAdults <- with(data_filtered1, ifelse((AGE > 17 & EMPSTAT == 1), '1', '0'))
data_filtered1$NChildren <- with(data_filtered1, ifelse((AGE < 18), '1', '0'))
data_filtered1$Infants <- with(data_filtered1, ifelse((AGE <= 2), '1', '0'))
data_filtered1$Preschoolers <- with(data_filtered1, ifelse((AGE >= 3 & AGE <= 5), '1', '0'))
data_filtered1$Schoolers <- with(data_filtered1, ifelse((AGE >= 6 & AGE <= 12), '1', '0'))
data_filtered1$Teenagers <- with(data_filtered1, ifelse((AGE >= 13 & AGE <= 17), '1', '0'))
data_filtered1$Seniors <- with(data_filtered1, ifelse((AGE > 64), '1', '0'))
data_filtered3 <- data_filtered1
data_filtered4 <- (select(data_filtered3,-c(YEAR, MULTYEAR, SAMPLE, CBSERIAL, HHWT, CLUSTER, STATEFIP, COUNTYFIP, STRATA, GQ, NFAMS, PERWT, FAMUNIT, RELATED, SEX, CITIZEN, EMPSTATD, Adults)))
data_filtered4 <- (select(data_filtered3,-c(YEAR, MULTYEAR, SAMPLE, CBSERIAL, HHWT, CLUSTER, STATEFIP, COUNTYFIP, STRATA, GQ, NFAMS, PERWT, FAMUNIT, RELATED, SEX, CITIZEN, EMPSTATD)))
data_filtered4$ADJUSTED_INCOME <- data_filtered4$ADJUST*data_filtered4$HHINCOME
data_filtered5 <- data_filtered4
data_filtered6 <- (select(data_filtered5,-c(ADJUST, PERNUM, NCHILD, RELATE, AGE, SCHOOL, EMPSTAT)))
data_filtered7 <- data_filtered6
data_filtered8 <- transform(data_filtered7,
NAdults = as.numeric(as.factor(NAdults)),
WorkingAdults = as.numeric(as.factor(WorkingAdults)),
NChildren = as.numeric(as.factor(NChildren)),
Infants = as.numeric(as.factor(Infants)),
Preschoolers = as.numeric(as.factor(Preschoolers)),
Schoolers = as.numeric(as.factor(Schoolers)),
Teenagers = as.numeric(as.factor(Teenagers)),
Seniors = as.numeric(as.factor(Seniors)))
data_filtered9 <- data_filtered8 %>%
group_by(SERIAL, HHINCOME, FAMSIZE, ADJUSTED_INCOME) %>%
summarise(across(c(NAdults, WorkingAdults, NChildren, Infants, Preschoolers, Schoolers, Teenagers, Seniors), sum))
data_filtered9$NAdults <- data_filtered9$NAdults - data_filtered9$FAMSIZE
data_filtered9$WorkingAdults <- data_filtered9$WorkingAdults - data_filtered9$FAMSIZE
data_filtered9$NChildren <- data_filtered9$NChildren - data_filtered9$FAMSIZE
data_filtered9$Infants <- data_filtered9$Infants - data_filtered9$FAMSIZE
data_filtered9$Preschoolers <- data_filtered9$Preschoolers - data_filtered9$FAMSIZE
data_filtered9$Schoolers <- data_filtered9$Schoolers - data_filtered9$FAMSIZE
data_filtered9$Teenagers <- data_filtered9$Teenagers - data_filtered9$FAMSIZE
url <- 'https://selfsufficiencystandard.org//wp-content/uploads/2021/10/CA2021_AllFamilies.xlsx'
GET(url, write_disk(tf <- tempfile(fileext = ".xlsx")))
S_wage <- read_excel(tf, 3L)
S_wage_Temp <- S_wage[-c(1)]
# Transforming all the necessary columns to numeric
S_wage_Temp <- transform(S_wage_Temp,`Adult(s)` = as.numeric(`Adult(s)`),
`Infant(s)` = as.numeric(`Infant(s)`),
`Preshooler(s)` = as.numeric(`Preshooler(s)`),
`Schoolager(s)` = as.numeric(`Schoolager(s)`),
`Teenager(s)` = as.numeric(`Teenager(s)`))
# Converting N/As to 0
S_wage_Temp[is.na(S_wage_Temp)] = 0
S_wage_Temp5 <- S_wage_Temp %>%
filter(Adult.s. < 4) %>% # Filtering out adults more than 4
filter(County == "Stanislaus County") %>%
mutate(NChildren = select(., Infant.s.:Teenager.s.) %>% rowSums(na.rm = TRUE)) %>%
filter(NChildren <= 6)# Totaling number of children
# Separating counties
SW_SC <- S_wage_Temp5 %>% filter(County == "Stanislaus County")
# Adding rows for working adults
S_wage_SC <- data.frame(SW_SC[rep(seq_len(dim(SW_SC)[1]), SW_SC$Adult.s.,),
, drop = FALSE], row.names=NULL)
# Combining all SW Tables
SW_All <- S_wage_SC
S_wage_Final <- SW_All %>% select(Adult.s., Infant.s., Preshooler.s., Schoolager.s., Teenager.s.,
County, Hourly.Self.Sufficiency.Wage, Monthly.Self.Sufficiency.Wage,
Annual.Self.Sufficiency.Wage, NChildren)
# Joining county data with sufficiency wage table by Number of adults, working adults and Number of children.
# Filtering it as 1 observation per household who is the head of the household
Data_Final_Analysis <- left_join(data_filtered10, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren"),
relationship = "many-to-many")
data_filtered10
data_filtered9
data_filtered10 <- data_filtered9
data_filtered8
Data_Final_Analysis <- left_join(data_filtered8, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren"),
relationship = "many-to-many")
Data_Final_Analysis2 <- (select(Data_Final_Analysis,-c(Seniors, County)))
data_filtered12 <- Data_Final_Analysis2 %>%
group_by(SERIAL, HHINCOME, FAMSIZE, ADJUSTED_INCOME,Hourly.Self.Sufficiency.Wage, Monthly.Self.Sufficiency.Wage, Annual.Self.Sufficiency.Wage,NAdults, WorkingAdults, NChildren, Infants, Preschoolers, Schoolers, Teenagers) %>%
summarise(across(c()))
data_filtered12
data_filtered12
Data_Final_Analysis2
Data_Final_Analysis2[is.na(data_filtered12)] = 0
Data_Final_Analysis2[is.na(Data_Final_Analysis2)] = 0
data_filtered13 <- subset(Data_Final_Analysis2, Annual.Self.Sufficiency.Wage != 0)
data_filtered14 <- subset(Data_Final_Analysis2, ADJUSTED_INCOME != 0)
data_filtered15 <- subset(data_filtered14, NChildren < 4)
data_filtered15
total_families <- nrow(data_filtered15)
total_families
percent_struggling <- sum(data_filtered15$ADJUSTED_INCOME < data_filtered14$Annual.Self.Sufficiency.Wage) / total_families * 100
print(percent_struggling)
# Calculate the percentage of non-struggling families
percent_non <- sum(data_filtered15$ADJUSTED_INCOME >= data_filtered14$Annual.Self.Sufficiency.Wage) / total_families * 100
print(percent_non)
######ANALYSIS for struggling working and struggling non working
# Non-working Families
nw_families <- data_filtered15 %>%
filter( WorkingAdults == 0)
# Calculate the percentage of struggling non-working families
nw_percent_struggling <- sum(nw_families$ADJUSTED_INCOME < nw_families$Annual.Self.Sufficiency.Wage) / total_families * 100
print(nw_percent_struggling)
# Calculate the percentage of non-struggling non-working families
nw_percent_non <- sum(nw_families$ADJUSTED_INCOME >= nw_families$Annual.Self.Sufficiency.Wage) / total_families * 100
print(nw_percent_non)
# Working Families
w_families <- data_filtered15 %>%
filter( WorkingAdults > 0)
# Calculate the percentage of struggling families
w_percent_struggling <- sum(w_families$ADJUSTED_INCOME < w_families$Annual.Self.Sufficiency.Wage) / total_families * 100
print(w_percent_struggling)
# Calculate the percentage of non-struggling families
w_percent_non <- sum(w_families$ADJUSTED_INCOME >= w_families$Annual.Self.Sufficiency.Wage) / total_families * 100
print(w_percent_non)
#--------------------------------------------- 5. Output ----------------------------------------------------
# Create a data frame to store the results
results <- data.frame(
Family_Type = c("All struggling families",
"All non-struggling families",
"Struggling working families",
"Struggling non-working families",
"Non-struggling working families",
"Non-struggling non-working families"),
Percent = c(percent_struggling,
percent_non,
w_percent_struggling,
nw_percent_struggling,
w_percent_non,
nw_percent_non)
)
# Print the results
print(results)
percent_struggling <- sum(data_filtered15$ADJUSTED_INCOME < data_filtered14$Annual.Self.Sufficiency.Wage) / total_families * 100
print(percent_struggling)
data_filtered15
data_filtered14
Data_Final_Analysis2
total_families <- nrow(Data_Final_Analysis2)
# Calculate the percentage of struggling families
percent_struggling <- sum(data_filtered15$ADJUSTED_INCOME < Data_Final_Analysis2$Annual.Self.Sufficiency.Wage) / total_families * 100
print(percent_struggling)
# Calculate the percentage of non-struggling families
percent_non <- sum(data_filtered15$ADJUSTED_INCOME >= Data_Final_Analysis2$Annual.Self.Sufficiency.Wage) / total_families * 100
print(percent_non)
# Total Families
total_families <- nrow(Data_Final_Analysis2)
# Calculate the percentage of struggling families
percent_struggling <- sum(Data_Final_Analysis2$ADJUSTED_INCOME < Data_Final_Analysis2$Annual.Self.Sufficiency.Wage) / total_families * 100
print(percent_struggling)
# Calculate the percentage of non-struggling families
percent_non <- sum(Data_Final_Analysis2$ADJUSTED_INCOME >= Data_Final_Analysis2$Annual.Self.Sufficiency.Wage) / total_families * 100
print(percent_non)
######ANALYSIS for struggling working and struggling non working
total_families
require(openxlsx)
output_path <- "C:/Users/HP/Desktop/CBPR/Data excel" # Use your own path
output_file <- file.path(output_path, "Data_Final_Analysis2.xlsx") # Create your file first
list_of_datasets <- list("Data_Final_Analysis2" = Data_Final_Analysis2)
openxlsx::write.xlsx(list_of_datasets, file = output_file)
S_wage_Final <- SW_All %>% select(Adult.s., Infant.s., Preshooler.s., Schoolager.s., Teenager.s.,
County, Hourly.Self.Sufficiency.Wage, Monthly.Self.Sufficiency.Wage,
Annual.Self.Sufficiency.Wage, NChildren)
Data_Final_Analysis <- left_join(data_filtered8, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren"),
relationship = "many-to-many")
Data_Final_Analysis2 <- (select(Data_Final_Analysis,-c(Seniors, County)))
Data_Final_Analysis2
url <- 'https://selfsufficiencystandard.org//wp-content/uploads/2021/10/CA2021_AllFamilies.xlsx'
GET(url, write_disk(tf <- tempfile(fileext = ".xlsx")))
S_wage <- read_excel(tf, 3L)
S_wage_Temp <- S_wage[-c(1)]
S_wage_Temp
S_wage_Temp <- S_wage[-c(1)]
# Transforming all the necessary columns to numeric
S_wage_Temp <- transform(S_wage_Temp,`Adult(s)` = as.numeric(`Adult(s)`),
`Infant(s)` = as.numeric(`Infant(s)`),
`Preshooler(s)` = as.numeric(`Preshooler(s)`),
`Schoolager(s)` = as.numeric(`Schoolager(s)`),
`Teenager(s)` = as.numeric(`Teenager(s)`))
# Converting N/As to 0
S_wage_Temp[is.na(S_wage_Temp)] = 0
# Gathering necessary data County
S_wage_Temp5 <- S_wage_Temp %>%
filter(Adult.s. < 4) %>% # Filtering out adults more than 4
filter(County == "Stanislaus County") %>%
mutate(NChildren = select(., Infant.s.:Teenager.s.) %>% rowSums(na.rm = TRUE)) %>%
filter(NChildren <= 6)# Totaling number of children
SW_SC <- S_wage_Temp5 %>% filter(County == "Stanislaus County")
SW_SC <- S_wage_Temp5 %>% filter(County == "Stanislaus County")
SW_SC
S_wage_SC <- data.frame(SW_SC[rep(seq_len(dim(SW_SC)[1]), SW_SC$Adult.s.,),
, drop = FALSE], row.names=NULL)
SW_All <- S_wage_SC
SW_All
S_wage_Final <- SW_All %>% select(Adult.s., Infant.s., Preshooler.s., Schoolager.s., Teenager.s.,
County, Hourly.Self.Sufficiency.Wage, Monthly.Self.Sufficiency.Wage,
Annual.Self.Sufficiency.Wage, NChildren)
S_wage_Final
data_filtered9 <- data_filtered8 %>%
group_by(SERIAL, HHINCOME, FAMSIZE, ADJUSTED_INCOME) %>%
summarise(across(c(NAdults, WorkingAdults, NChildren, Infants, Preschoolers, Schoolers, Teenagers, Seniors), sum))
#Cleaning the Data
data_filtered9$NAdults <- data_filtered9$NAdults - data_filtered9$FAMSIZE
data_filtered9$WorkingAdults <- data_filtered9$WorkingAdults - data_filtered9$FAMSIZE
data_filtered9$NChildren <- data_filtered9$NChildren - data_filtered9$FAMSIZE
data_filtered9$Infants <- data_filtered9$Infants - data_filtered9$FAMSIZE
data_filtered9$Preschoolers <- data_filtered9$Preschoolers - data_filtered9$FAMSIZE
data_filtered9$Schoolers <- data_filtered9$Schoolers - data_filtered9$FAMSIZE
data_filtered9$Teenagers <- data_filtered9$Teenagers - data_filtered9$FAMSIZE
data_filtered10 <- data_filtered9
data_filtered10
data_filtered8
Data_Final_Analysis <- left_join(data_filtered8, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren"),
relationship = "many-to-many")
Data_Final_Analysis
S_wage_Final
data_filtered9
data_filtered10
data_filtered8
Data_Final_Analysis <- left_join(data_filtered8, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren"),
relationship = "many-to-many")
Data_Final_Analysis
Data_Final_Analysis <- left_join(data_filter5, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "
Data_Final_Analysis <- left_join(data_filter5, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "County" = "County", "NChildren" = "NChildren"),
Data_Final_Analysis <- left_join(data_filtered8, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren"),
relationship = "many-to-many")
Data_Final_Analysis
S_wage_Final
SW_SC
Data_Final_Analysis <- left_join(data_filtered8, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren"),
relationship = "many-to-many")
Data_Final_Analysis
Data_Final_Analysis <- left_join(data_filtered8, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren")
Data_Final_Analysis
Data_Final_Analysis <- left_join(data_filtered8, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren")
Data_Final_Analysis
Data_Final_Analysis <- left_join(data_filtered8, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren"),
relationship = "many-to-many")
install.packages("dplyr")
install.packages("dplyr")
Data_Final_Analysis <- left_join(data_filtered8, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren"),
relationship = "many-to-many")
Data_Final_Analysis
data_filtered10
data_filtered8
install.packages("tidyverse")
install.packages("ipumsr")
install.packages("R.utils")
install.packages("writexl")
install.packages("readxl")
install.packages("openxlsx")
install.packages("janitor")
install.packages("xlsx")
install.packages("rJava")
install.packages("dplyr")
install.packages("magrittr")
#Load Packages
library(magrittr)
library(R.utils)
library(ipumsr)
library(tidyverse)
library(dplyr)
library(purrr)
library(writexl)
library(readxl)
library(openxlsx)
library(xml2)
library(rvest)
library(readr)
library(janitor)
library(scales)
library(rJava)
library(xlsx)
library(readxl)
library(httr)
# ----------------------------------- 1. Extracting Data from IMPUMS -------------------------------------------
setwd("C:/Ashwin/")
#Install Packages
install.packages("tidyverse")
install.packages("ipumsr")
install.packages("R.utils")
install.packages("writexl")
install.packages("readxl")
install.packages("openxlsx")
install.packages("janitor")
install.packages("xlsx")
install.packages("rJava")
install.packages("dplyr")
install.packages("magrittr")
#Load Packages
library(magrittr)
library(R.utils)
library(ipumsr)
library(tidyverse)
library(dplyr)
library(purrr)
library(writexl)
library(readxl)
library(openxlsx)
library(xml2)
library(rvest)
library(readr)
library(janitor)
library(scales)
library(rJava)
library(xlsx)
library(readxl)
library(httr)
install.packages("dplyr")
install.packages("writexl")
install.packages("ipumsr")
install.packages("openxlsx")
install.packages("magrittr")
install.packages("rJava")
install.packages("readxl")
install.packages("xlsx")
install.packages("janitor")
install.packages("R.utils")
install.packages("tidyverse")
install.packages("tidyverse")
setwd("C:/Users/HP/Desktop/CBPR")
ddi <- read_ipums_ddi("usa_00006.xml")
data <- read_ipums_micro(ddi)
# Cleaning the Data
data_state <- filter(data, STATEFIP == 6) # State - California
data_county <- filter(data_state, COUNTYFIP == 99)  # County - Stanislaus
data_Income <- filter(data_county, HHINCOME < 9999999) #Income less than 9.99 Million
data_fams1 <-  filter(data_Income, NFAMS == 1) # Number of Families per household = 1
data_filtered1 <- data_fams1
# Adding new colomn the Data
data_filtered1$NAdults <- with(data_filtered1, ifelse((AGE > 17 & AGE < 65), '1','0'))
data_filtered1$WorkingAdults <- with(data_filtered1, ifelse((AGE > 17 & EMPSTAT == 1), '1', '0'))
data_filtered1$NChildren <- with(data_filtered1, ifelse((AGE < 18), '1', '0'))
data_filtered1$Infants <- with(data_filtered1, ifelse((AGE <= 2), '1', '0'))
data_filtered1$Preschoolers <- with(data_filtered1, ifelse((AGE >= 3 & AGE <= 5), '1', '0'))
data_filtered1$Schoolers <- with(data_filtered1, ifelse((AGE >= 6 & AGE <= 12), '1', '0'))
data_filtered1$Teenagers <- with(data_filtered1, ifelse((AGE >= 13 & AGE <= 17), '1', '0'))
data_filtered1$Seniors <- with(data_filtered1, ifelse((AGE > 64), '1', '0'))
data_filtered3 <- data_filtered1
#Checking for missing data
sum(is.na(data_filtered3))
# Cleaning the Data
data_filtered4 <- (select(data_filtered3,-c(YEAR, MULTYEAR, SAMPLE, CBSERIAL, HHWT, CLUSTER, STATEFIP, COUNTYFIP, STRATA, GQ, NFAMS, PERWT, FAMUNIT, RELATED, SEX, CITIZEN, EMPSTATD)))
# Adding new colomn the Data
data_filtered4$ADJUSTED_INCOME <- data_filtered4$ADJUST*data_filtered4$HHINCOME
data_filtered5 <- data_filtered4
# Cleaning the Data
data_filtered6 <- (select(data_filtered5,-c(ADJUST, PERNUM, NCHILD, RELATE, AGE, SCHOOL, EMPSTAT)))
data_filtered7 <- data_filtered6
total_people__Non_strug_in_county_1 <- sum(data_filtered7$FAMSIZE)
# Transforming all the necessary columns to numeric
data_filtered8 <- transform(data_filtered7,
NAdults = as.numeric(as.factor(NAdults)),
WorkingAdults = as.numeric(as.factor(WorkingAdults)),
NChildren = as.numeric(as.factor(NChildren)),
Infants = as.numeric(as.factor(Infants)),
Preschoolers = as.numeric(as.factor(Preschoolers)),
Schoolers = as.numeric(as.factor(Schoolers)),
Teenagers = as.numeric(as.factor(Teenagers)),
Seniors = as.numeric(as.factor(Seniors)))
#combine rows with same value for SERIAL, HHINCOME, FAMSIZE, ADJUSTED_INCOME and aggregate remaining columns
data_filtered9 <- data_filtered8 %>%
group_by(SERIAL, HHINCOME, FAMSIZE, ADJUSTED_INCOME) %>%
summarise(across(c(NAdults, WorkingAdults, NChildren, Infants, Preschoolers, Schoolers, Teenagers, Seniors), sum))
#Cleaning the Data
data_filtered9$NAdults <- data_filtered9$NAdults - data_filtered9$FAMSIZE
data_filtered9$WorkingAdults <- data_filtered9$WorkingAdults - data_filtered9$FAMSIZE
data_filtered9$NChildren <- data_filtered9$NChildren - data_filtered9$FAMSIZE
data_filtered9$Infants <- data_filtered9$Infants - data_filtered9$FAMSIZE
data_filtered9$Preschoolers <- data_filtered9$Preschoolers - data_filtered9$FAMSIZE
data_filtered9$Schoolers <- data_filtered9$Schoolers - data_filtered9$FAMSIZE
data_filtered9$Teenagers <- data_filtered9$Teenagers - data_filtered9$FAMSIZE
data_filtered10 <- data_filtered9
total_people__Non_strug_in_county_2 <- sum(data_filtered10$FAMSIZE)
#Checking for duplicated data
found_duplicates <- anyDuplicated(data_filtered10) > 0
found_duplicates
#Checking for duplicated data
sum(duplicated(data_filtered10))
#Checking for missing data
sum(is.na(data_filtered10))
# -------------------------- 2. Self-sufficiency standard for California in 2021 --------------------------------
url <- 'https://selfsufficiencystandard.org//wp-content/uploads/2021/10/CA2021_AllFamilies.xlsx'
GET(url, write_disk(tf <- tempfile(fileext = ".xlsx")))
S_wage <- read_excel(tf, 3L)
# Seeing the structure of the data
# str(S_wage)
# head(S_wage)
# Cleaning the data
S_wage_Temp <- S_wage[-c(1)]
# Transforming all the necessary columns to numeric
S_wage_Temp <- transform(S_wage_Temp,`Adult(s)` = as.numeric(`Adult(s)`),
`Infant(s)` = as.numeric(`Infant(s)`),
`Preshooler(s)` = as.numeric(`Preshooler(s)`),
`Schoolager(s)` = as.numeric(`Schoolager(s)`),
`Teenager(s)` = as.numeric(`Teenager(s)`))
# Converting N/As to 0
S_wage_Temp[is.na(S_wage_Temp)] = 0
# Gathering necessary data County
S_wage_Temp5 <- S_wage_Temp %>% filter(Adult.s. < 4)  # Filtering out adults more than 4
S_wage_Temp6 <- S_wage_Temp5 %>% mutate(NChildren = select(., Infant.s.:Teenager.s.) %>% rowSums(na.rm = TRUE))
S_wage_Temp7 <- S_wage_Temp6 %>% filter(NChildren <= 6)  # Totaling number of children
# Separating counties
SW_SC <- S_wage_Temp7 %>% filter(County == "Stanislaus County")
SW_SC2 <- SW_SC %>% mutate(Annual.Amount.Required = select(., Annual.Self.Sufficiency.Wage:Emergency.Savings) %>% rowSums(na.rm = TRUE))
# Combining all SW Tables
SW_All <- SW_SC2
#----------------------------------------- 3. Join Table ---------------------------------------------------------
S_wage_Final <- SW_All %>% select(Adult.s., Infant.s., Preshooler.s., Schoolager.s., Teenager.s.,
County, Hourly.Self.Sufficiency.Wage, Monthly.Self.Sufficiency.Wage,
Annual.Self.Sufficiency.Wage, NChildren, Annual.Amount.Required)
# Joining county data with sufficiency wage table by Number of adults, working adults and Number of children.
# Filtering it as 1 observation per household who is the head of the household
Data_Final_Analysis <- left_join(data_filtered10, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren"),
relationship = "many-to-many")
#Data_Final <-  filter(Data_Final_Analysis, RELATE == 1)
Data_Final_Analysis2 <- (select(Data_Final_Analysis,-c(Seniors, County)))
#combine rows with same value for SERIAL, HHINCOME, FAMSIZE, ADJUSTED_INCOME and aggregate remaining columns
data_filtered12 <- Data_Final_Analysis2 %>%
group_by(SERIAL, HHINCOME, FAMSIZE, ADJUSTED_INCOME,Hourly.Self.Sufficiency.Wage, Monthly.Self.Sufficiency.Wage, Annual.Self.Sufficiency.Wage,Annual.Amount.Required, NAdults, WorkingAdults, NChildren, Infants, Preschoolers, Schoolers, Teenagers) %>%
summarise(across(c()))
# Converting N/As to 0
data_filtered12[is.na(data_filtered12)] = 0
data_filtered13 <- subset(data_filtered12, Annual.Amount.Required != 0)
data_filtered14 <- subset(data_filtered13, ADJUSTED_INCOME != 0)
data_filtered15 <- subset(data_filtered14, NChildren < 4)
# -------------------
data_filtered15
Data_Final_Analysis2
S_wage_Final
data_filtered8
Data_Final_Analysis <- left_join(data_filtered8, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren"),
relationship = "many-to-many")
Data_Final_Analysis
data_filtered10
#----------------------------------------- 3. Join Table ---------------------------------------------------------
S_wage_Final <- SW_All %>% select(Adult.s., Infant.s., Preshooler.s., Schoolager.s., Teenager.s.,
County, Hourly.Self.Sufficiency.Wage, Monthly.Self.Sufficiency.Wage,
Annual.Self.Sufficiency.Wage, NChildren, Annual.Amount.Required)
# Joining county data with sufficiency wage table by Number of adults, working adults and Number of children.
# Filtering it as 1 observation per household who is the head of the household
Data_Final_Analysis <- left_join(data_filtered10, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "NChildren" = "NChildren"),
relationship = "many-to-many")
Data_Final_Analysis
Data_Final_Analysis2 <- (select(Data_Final_Analysis,-c(Seniors, County)))
data_filtered12 <- Data_Final_Analysis2 %>%
group_by(SERIAL, HHINCOME, FAMSIZE, ADJUSTED_INCOME,Hourly.Self.Sufficiency.Wage, Monthly.Self.Sufficiency.Wage, Annual.Self.Sufficiency.Wage,Annual.Amount.Required, NAdults, WorkingAdults, NChildren, Infants, Preschoolers, Schoolers, Teenagers) %>%
summarise(across(c()))
data_filtered12
data_filtered12[is.na(data_filtered12)] = 0
data_filtered13 <- subset(data_filtered12, Annual.Amount.Required != 0)
data_filtered14 <- subset(data_filtered13, ADJUSTED_INCOME != 0)
data_filtered15 <- subset(data_filtered14, NChildren < 4)
data_filtered15
percent_struggling <- sum(data_filtered15$ADJUSTED_INCOME < data_filtered15$Annual.Amount.Required)
percent_struggling
percent_struggling_2 <- percent_struggling * data_filtered15$FAMSIZE
percent_struggling_2
percent_struggling_2 <- sum(percent_struggling * data_filtered15$FAMSIZE)
percent_struggling_2
