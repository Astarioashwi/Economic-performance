`Preshooler(s)` = as.numeric(`Preshooler(s)`),
`Schoolager(s)` = as.numeric(`Schoolager(s)`),
`Teenager(s)` = as.numeric(`Teenager(s)`))
S_wage_Temp
S_wage_Temp[is.na(S_wage_Temp)] = 0
S_wage_Temp5 <- S_wage_Temp %>%
filter(Adult.s. < 4) %>% # Filtering out adults more than 4
filter(County == "Stanislaus County") %>%
mutate(NChildren = select(., Infant.s.:Teenager.s.) %>% rowSums(na.rm = TRUE)) %>%
filter(NChildren <= 6)# Totaling number of children
S_wage_Temp5 <- S_wage_Temp %>%
filter(Adult.s. < 4) %>% # Filtering out adults more than 4
filter(County == "Stanislaus County") %>%
mutate(NChildren = select(., Infant.s.:Teenager.s.) %>% rowSums(na.rm = TRUE)) %>%
filter(NChildren <= 6)# Totaling number of children
# Gathering necessary data County
S_wage_Temp5 <- S_wage_Temp %>%
filter(Adult.s. < 4) %>% # Filtering out adults more than 4
filter(County == "Stanislaus County") %>%
mutate(NChildren = select(., Infant.s.:Teenager.s.) %>% rowSums(na.rm = TRUE)) %>%
NChildren
SW_SC <- S_wage_Temp5 %>% filter(County == "Stanislaus County")
SW_SC <- S_wage_Temp5 %>% filter(County == "Stanislaus County")
SW_SC
S_wage_SC <- data.frame(SW_SC[rep(seq_len(dim(SW_SC)[1]), SW_SC$Adult.s.,),
, drop = FALSE], row.names=NULL)
S_wage_SC
SW_All <- S_wage_SC
S_wage_Final <- SW_All %>% select(Adult.s., Infant.s., Preshooler.s., Schoolager.s., Teenager.s.,
County, Hourly.Self.Sufficiency.Wage, Monthly.Self.Sufficiency.Wage,
Annual.Self.Sufficiency.Wage, NChildren)
S_wage_Final
Data_Final_Analysis <- left_join(data_final1, S_wage_Final,
by = c("NAdults"="Adult.s.", "Infants" = "Infant.s.", "Preschoolers" = "Preshooler.s.","Schoolers" = "Schoolager.s.", "Teenagers" = "Teenager.s.", "County" = "County", "NChildren" = "NChildren"),
relationship = "many-to-many")
data <-
define_extract_usa(
"USA extract for API vignette",
c("us2019c"), # 2015-2019 ACS 5-Year
c("STATEFIP","COUNTYFIP","NCHILD","FAMSIZE","EMPSTAT","HHINCOME", "SEX", "SCHOOL",
"NFAMS", "FAMUNIT", "AGE", "RElATE", "ADJUST", "RACHSING", "EDUC", "CITIZEN")
) %>%
submit_extract() %>%
wait_for_extract() %>%
download_extract() %>%
read_ipums_micro()
install.packages("ipumsr")
install.packages("ipumsr")
library(ipumsr)
data <-
define_extract_usa(
"USA extract for API vignette",
c("us2019c"), # 2015-2019 ACS 5-Year
c("STATEFIP","COUNTYFIP","NCHILD","FAMSIZE","EMPSTAT","HHINCOME", "SEX", "SCHOOL",
"NFAMS", "FAMUNIT", "AGE", "RElATE", "ADJUST", "RACHSING", "EDUC", "CITIZEN")
) %>%
submit_extract() %>%
wait_for_extract() %>%
download_extract() %>%
read_ipums_micro()
# The initial part of this script uses the ...datadict.csv metadata file from an
# IHGIS extract to create a data frame with informative column labels.
# It includes mechanisms to substitute shorter versions of long category labels
# and to set cells populated with specified text as NA.
#
# The second part of the script demonstrates simple data exploration,
# including creating a subset of variables of interest leveraging the new
# column names.
# Finally, the simplified data frame is exported to a CSV file for use in GIS.
library(tidyverse)
##### SET PARAMETERS ######
###########################
# Path to files will need to be updated. Unzipped folder of extract contents.
ihgis_extract_dir <- "DO2010pop_building"
# Designate a data file to work with
table_code <- "AAL"
geog_lev <- "g3"
# Set NA indicator (e.g., "-")
na_string <- ""
##### READ IN DATA & METADATA ######
####################################
# Read designated file
cur_file <- list.files(ihgis_extract_dir, str_c(table_code, geog_lev, sep = "_"), full.names = TRUE)
ihgis_data <- read_csv(cur_file, col_types = cols(.default = col_character()))
# Read metadata
datadict <- read_csv(
list.files(ihgis_extract_dir, "datadict.csv", full.names = TRUE)
)
# Read file of label substitutions corresponding to designated file
substitutions <- read_csv(str_c("substitutions_",table_code,".csv"))
---
title: "New"
#Install Packages
install.packages("tidyverse")
install.packages("ipumsr")
install.packages("R.utils")
install.packages("writexl")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("ipumsr")
install.packages("R.utils")
install.packages("writexl")
install.packages("readxl")
install.packages("openxlsx")
install.packages("janitor")
install.packages("xlsx")
install.packages("rJava")
library(R.utils)
library(ipumsr)
library(tidyverse)
library(dplyr)
library(purrr)
library(writexl)
library(readxl)
library(openxlsx)
library(xml2)
library(rvest)
library(readr)
library(janitor)
library(scales)
library(rJava)
library(xlsx)
library(readxl)
library(httr)
data <-
define_extract_usa(
"USA extract for API vignette",
c("us2019c"), # 2015-2019 ACS 5-Year
c("STATEFIP","COUNTYFIP","NCHILD","FAMSIZE","EMPSTAT","HHINCOME", "SEX", "SCHOOL",
"NFAMS", "FAMUNIT", "AGE", "RElATE", "ADJUST", "RACHSING", "EDUC", "CITIZEN")
) %>%
submit_extract() %>%
wait_for_extract() %>%
download_extract() %>%
read_ipums_micro()
print(S_wage_Temp)
require(openxlsx)
output_path <- "///" # Use your own path
output_file <- file.path(output_path, "Struggling Working and Non-working Families_RSUpdated.xlsx") # Create your file first
list_of_datasets <- list("Results" = results)
# Print the results
print(S_wage_Temp)
require(openxlsx)
output_path <- "///" # Use your own path
output_file <- file.path(output_path, "Struggling Working and Non-working Families_RSUpdated.xlsx") # Create your file first
list_of_datasets <- list("S_wage_Temp" = S_wage_Temp)
openxlsx::write.xlsx(list_of_datasets, file = output_file)
print(S_wage_Temp)
require(openxlsx)
output_path <- "C:\Ashwin\" # Use your own path
print(S_wage_Temp)
require(openxlsx)
output_path <- "C:/Ashwin/" # Use your own path
output_file <- file.path(output_path, "Struggling Working and Non-working Families_RSUpdated.xlsx") # Create your file first
list_of_datasets <- list("S_wage_Temp" = S_wage_Temp)
openxlsx::write.xlsx(list_of_datasets, file = output_file)
setwd("C:/Ashwin/")
ddi <- read_ipums_ddi("usa_00005.xml")
data <- read_ipums_micro(ddi)
setwd("C:/Ashwin/")
ddi <- read_ipums_ddi("usa_00005.xml")
data <- read_ipums_micro(ddi)
data_final2 <- data %>% filter(STATEFIP == 6) %>% # State - California
data_final2
data_final2 <- data %>% filter(STATEFIP == 6)
data_final2
filter(COUNTYFIP == 99) %>% # County - Stanislaus
filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
mutate(NAdults = sum(AGE > 17 & AGE < 65), # Number of Adults (Age 18 & above)
Working_Adults = sum(AGE > 17 & EMPSTAT == 1), # Number of Adults who have employment status as employed
NChildren = sum(AGE < 18),
Infants = sum(AGE <= 2),
Preschoolers = sum(AGE >= 3 & AGE <= 5),
Schoolers = sum(AGE >= 6 & AGE <= 12),
Teenagers = sum(AGE >= 13 & AGE <= 17),
Student = sum(SCHOOL == 2),
Seniors = sum(AGE > 64)) %>% # Number of Children (Below the age of 18)
NChildren
NChildren
mutate(NAdults = sum(AGE > 17 & AGE < 65), # Number of Adults (Age 18 & above)
Working_Adults = sum(AGE > 17 & EMPSTAT == 1), # Number of Adults who have employment status as employed
NChildren = sum(AGE < 18),
Infants = sum(AGE <= 2),
Preschoolers = sum(AGE >= 3 & AGE <= 5),
Schoolers = sum(AGE >= 6 & AGE <= 12),
Teenagers = sum(AGE >= 13 & AGE <= 17),
Student = sum(SCHOOL == 2),
Seniors = sum(AGE > 64)) %>% # Number of Children (Below the age of 18)
NChildren
mutate(NAdults = sum(AGE > 17 & AGE < 65)) # Number of Adults (Age 18 & above)
print(n = AGE)
AGE
filter(COUNTYFIP == 99) %>% # County - Stanislaus
filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
mutate(NAdults = sum(AGE > 17 & AGE < 65))
data_final2
data_final2 <- data %>% filter(COUNTYFIP == 99) %>% # County - Stanislaus
data_final2
data_final2
setwd("C:/Ashwin/")
ddi <- read_ipums_ddi("usa_00005.xml")
data <- read_ipums_micro(ddi)
data_final2 <- data %>% filter(STATEFIP == 6) %>% # State - California
data_final3 <- data %>% filter(COUNTYFIP == 99) %>% # County - Stanislaus
data_final3
data_final2
data_final3 <- data_final2 %>% filter(COUNTYFIP == 99) %>%
data_final3
data_final3 <- data_final2 %>% filter(COUNTYFIP == 37) %>% # County - Stanislaus
data_final3
data_final2
COUNTYFIP
STATEFIP
data
data_final2
data_final3
data_final3 <- data_final2 %>% filter(COUNTYFIP == 99) %>%
data_final3
data_final3 <- data_final2 %>% filter(COUNTYFIP == 99) %>% # County - Stanislaus
data_final2 <- data %>% filter(STATEFIP == 6) %>% # State - California
data_final3
data_final2
data_final3
data_final3 <- data %>% filter(COUNTYFIP == 99) %>% # County - Stanislaus
data_final3
data_state <- data %>% filter(STATEFIP == 6) %>% # State - California
data_state
data_state <- data %>% filter(STATEFIP == 6) %>% # State - California
data_state
data_final2
data
ddi
data_final2
data_final3 <- data_final2 %>% filter(COUNTYFIP == 99)
data_final3
data_final4 <- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final4
data_final3
data_final4
data_final2 <- data %>% filter(STATEFIP == 6) %>% # State - California
data_final3 <- data_final2 %>% filter(COUNTYFIP == 99) %>% # County - Stanislaus
data_final4 <- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final4
ddi
data
data_final2 <- data %>% filter(STATEFIP == 6) %>% # State - California
data_final3 <- data_final2 %>% filter(COUNTYFIP == 99) %>% # County - Stanislaus
data_final4 <- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final2
data_final3
data_final2
data_final4
data_final4
data_final4
data_final3
data_final4
data_final4
data_final4 <- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final4
data_final_4 <- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final_4
data
data_final2
data_final3
data_final4
data_final4
setwd("C:/Ashwin/")
ddi <- read_ipums_ddi("usa_00005.xml")
data <- read_ipums_micro(ddi)
# Cleaning the Data
data_final2 <- data %>% filter(STATEFIP == 6) %>% # State - California
data_final3 <- data_final2 %>% filter(COUNTYFIP == 99) %>% # County - Stanislaus
data_final4 <- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final4
data_final2 <- data %>% filter(STATEFIP == 6) %>% # State - California
data_final3 <- data_final2 %>% filter(COUNTYFIP == 99) %>% # County - Stanislaus
data_final4 <- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final4
setwd("C:/Ashwin/")
ddi <- read_ipums_ddi("usa_00005.xml")
data <- read_ipums_micro(ddi)
# Cleaning the Data
data_final2 <- data %>% filter(STATEFIP == 6) %>% # State - California
data_final3 <- data_final2 %>% filter(COUNTYFIP == 99) %>% # County - Stanislaus
data_final4 <- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final4
data_final4
data_final4<- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final4
mutate(ADJUSTED_INCOME = ADJUST * HHINCOME) %>% # Adjusting Income with the Adjust factor
group_by(SERIAL) %>%
ADJUSTED_INCOME
#Install Packages
install.packages("tidyverse")
install.packages("ipumsr")
install.packages("R.utils")
install.packages("writexl")
install.packages("readxl")
install.packages("openxlsx")
install.packages("janitor")
install.packages("xlsx")
install.packages("rJava")
#Load Packages
library(R.utils)
library(ipumsr)
library(tidyverse)
library(dplyr)
library(purrr)
library(writexl)
library(readxl)
library(openxlsx)
library(xml2)
library(rvest)
library(readr)
library(janitor)
library(scales)
library(rJava)
library(xlsx)
library(readxl)
library(httr)
# Setting working directory and API key
# setwd("~/LivingWage")
# set_ipums_api_key("", save = TRUE, overwrite = TRUE) # Please Use your own API key
# ----------------------------------- 1. Extracting Data from IMPUMS -------------------------------------------
data <-
define_extract_usa(
"USA extract for API vignette",
c("us2019c"), # 2015-2019 ACS 5-Year
c("STATEFIP","COUNTYFIP","NCHILD","FAMSIZE","EMPSTAT","HHINCOME", "SEX", "SCHOOL",
"NFAMS", "FAMUNIT", "AGE", "RElATE", "ADJUST", "RACHSING", "EDUC", "CITIZEN")
) %>%
submit_extract() %>%
wait_for_extract() %>%
download_extract() %>%
read_ipums_micro()
data_final2
data_final3
data_final4
data_final4 <- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final4
data_final4 <- data_final3 filter(HHINCOME < 9999999
data_final4 <- data_final3 filter(HHINCOME < 9999999)
data_final4 <- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final4 <- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final4
data_final4 <- data_final2 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final4
data_final4 <- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final3
data_final3 <- data_final2 %>% filter(COUNTYFIP == 99) %>% # County - Stanislaus
data_final3
data_final2
data_final3
data_final4
ddi
data_final2
data_final3
data_final4
ddi
data_final4
data_final4<-data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final4
install.packages("dplyr")
library(dplyr)
data_final4 <- data_final3 %>% filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data_final4
data_final3
data_final4
filter(HHINCOME < 9999999) %>% # Income less than 9.99 Million
data
data
data_final4
data_final4
data_final4
library(magrittr)
install.packages("magrittr")
library(magrittr)
data
data_final2
data_final3
data_final4
mutate(NAdults = sum(AGE > 17 & AGE < 65)) # Number of Adults (Age 18 & above)
install.packages("tidyverse")
install.packages("ipumsr")
install.packages("R.utils")
install.packages("writexl")
install.packages("readxl")
install.packages("openxlsx")
install.packages("janitor")
install.packages("xlsx")
install.packages("rJava")
install.packages("dplyr")
install.packages("magrittr")
library(magrittr)
library(R.utils)
library(ipumsr)
library(tidyverse)
library(dplyr)
library(purrr)
library(writexl)
library(readxl)
library(openxlsx)
library(xml2)
library(rvest)
library(readr)
library(janitor)
library(scales)
library(rJava)
library(xlsx)
library(readxl)
library(httr)
mutate(NAdults = sum(AGE > 17 & AGE < 65))
data_final2
data_final4
filter(data, STATEFIP == 6) # State - California
filter(data, COUNTYFIP == 99) %>% # County - Stanislaus
data
data
data1 <- filter(data, STATEFIP == 6) # State - California
data1
data2 <- filter(data, COUNTYFIP == 99)  # County - Stanislaus
data2
data <- filter(HHINCOME < 9999999) #Income less than 9.99 Million
data <- filter(data, HHINCOME < 9999999) #Income less than 9.99 Million
data3 <- filter(data, HHINCOME < 9999999) #Income less than 9.99 Million
data3
data
data1
data2
data3
data1 <- filter(data, STATEFIP == 6) # State - California
data2 <- filter(data1, COUNTYFIP == 99)  # County - Stanislaus
data3 <- filter(data2, HHINCOME < 9999999) #Income less than 9.99 Million
data3
data_state <- filter(data, STATEFIP == 6) # State - California
data_county <- filter(data_state, COUNTYFIP == 99)  # County - Stanislaus
data_Income <- filter(data_county, HHINCOME < 9999999) #Income less than 9.99 Million
data_filtered1 <- data_Income
data_filtered1
mutate(data_filtered1, ADJUSTED_INCOME = ADJUST * HHINCOME)  # Adjusting Income with the Adjust factor group_by(SERIAL)
data_filtered2 <- mutate(data_filtered1, ADJUSTED_INCOME = ADJUST * HHINCOME)  # Adjusting Income with the Adjust factor group_by(SERIAL)
data_filtered2
data_filtered3 <-  mutate(data_filtered2, NAdults = sum(AGE > 17 & AGE < 65)) # Number of Adults (Age 18 & above)
data_filtered3
data_state <- filter(data, STATEFIP == 6) # State - California
data_county <- filter(data_state, COUNTYFIP == 99)  # County - Stanislaus
data_Income <- filter(data_county, HHINCOME < 9999999) #Income less than 9.99 Million
data_filtered1 <- data_Income
#####filter(NFAMS == 1) %>% # Number of Families per household = 1
#####filter(FAMSIZE < 10) %>% # Having a maximum family size of 9 (4 Adults and 3 Children)
data_filtered2 <- mutate(data_filtered1, ADJUSTED_INCOME = ADJUST * HHINCOME)  # Adjusting Income with the Adjust factor group_by(SERIAL)
data_filtered3 <-  mutate(data_filtered2, NAdults = sum(AGE > 17 & AGE < 65)) # Number of Adults (Age 18 & above)
data_filtered4 <-  mutate(data_filtered3, Working_Adults = sum(AGE > 17 & EMPSTAT == 1)) # Number of Adults who have employment status as employed
data_filtered5 <-  mutate(data_filtered4, NChildren = sum(AGE < 18))
data_filtered6 <-  mutate(data_filtered5, Infants = sum(AGE <= 2))
data_filtered7 <-  mutate(data_filtered6, Preschoolers = sum(AGE >= 3 & AGE <= 5))
data_filtered8 <-  mutate(data_filtered7, Schoolers = sum(AGE >= 6 & AGE <= 12))
data_filtered9 <-  mutate(data_filtered8, Teenagers = sum(AGE >= 13 & AGE <= 17))
data_filtered10 <-  mutate(data_filtered9, Student = sum(SCHOOL == 2))
data_filtered11 <-  mutate(data_filtered10, Seniors = sum(AGE > 64)) %>% # Number of Children (Below the age of 18)
data_filtered11
data_filtered6 <-  mutate(data_filtered5, Infants = sum(AGE <= 2))
data_filtered6
data_filtered7
data_filtered8
data_filtered9
data_filtered10
data_filtered11
data_filtered11 <-  mutate(data_filtered10, Seniors = sum(AGE > 64)) # Number of Children (Below the age of 18)
data_filtered11
data_filtered11 <-  mutate(data_filtered11, County = case_when(COUNTYFIP == 99 ~ 'Stanislaus County') ## Changing COUNTYFIP to County Name
data_filtered12 <-  mutate(data_filtered11, County = case_when(COUNTYFIP == 99 ~ 'Stanislaus County') ## Changing COUNTYFIP to County Name
print(data_filtered11)
require(openxlsx)
output_path <- "C:/Ashwin/" # Use your own path
output_file <- file.path(output_path, "Struggling Working and Non-working Families_RSUpdated.xlsx") # Create your file first
list_of_datasets <- list("data_filtered11" = data_filtered11)
openxlsx::write.xlsx(list_of_datasets, file = output_file)
# Print the results
print(data_filtered11)
require(openxlsx)
output_path <- "C:/Ashwin/" # Use your own path
output_file <- file.path(output_path, "Test.xlsx") # Create your file first
list_of_datasets <- list("data_filtered11" = data_filtered11)
openxlsx::write.xlsx(list_of_datasets, file = output_file)
data_filtered12 <-  mutate(data_filtered11, filter(NFAMS == 1) # Number of Families per household = 1
data_filtered12
data_filtered12 <-  filter(data_filtered11, NFAMS == 1) # Number of Families per household = 1
data_filtered12
data_filtered11 <-  mutate(data_filtered10, Seniors = sum(AGE > 64)) # Number of Children (Below the age of 18)
data_filtered12 <-  filter(data_filtered11, NFAMS == 1) # Number of Families per household = 1
data_filtered12
data_fams1 <-  filter(data_Income, NFAMS == 1) # Number of Families per household = 1
data_filtered1 <- data_fams1
data_filtered1
data_state <- filter(data, STATEFIP == 6) # State - California
data_county <- filter(data_state, COUNTYFIP == 99)  # County - Stanislaus
data_Income <- filter(data_county, HHINCOME < 9999999) #Income less than 9.99 Million
data_fams1 <-  filter(data_Income, NFAMS == 1) # Number of Families per household = 1
data_filtered1 <- data_fams1
#filter(NFAMS == 1) %>% # Number of Families per household = 1
#####filter(FAMSIZE < 10) %>% # Having a maximum family size of 9 (4 Adults and 3 Children)
data_filtered2 <- mutate(data_filtered1, ADJUSTED_INCOME = ADJUST * HHINCOME)  # Adjusting Income with the Adjust factor group_by(SERIAL)
data_filtered3 <-  mutate(data_filtered2, NAdults = sum(AGE > 17 & AGE < 65)) # Number of Adults (Age 18 & above)
data_filtered4 <-  mutate(data_filtered3, Working_Adults = sum(AGE > 17 & EMPSTAT == 1)) # Number of Adults who have employment status as employed
data_filtered5 <-  mutate(data_filtered4, NChildren = sum(AGE < 18))
data_filtered6 <-  mutate(data_filtered5, Infants = sum(AGE <= 2))
data_filtered7 <-  mutate(data_filtered6, Preschoolers = sum(AGE >= 3 & AGE <= 5))
data_filtered8 <-  mutate(data_filtered7, Schoolers = sum(AGE >= 6 & AGE <= 12))
data_filtered9 <-  mutate(data_filtered8, Teenagers = sum(AGE >= 13 & AGE <= 17))
data_filtered10 <-  mutate(data_filtered9, Student = sum(SCHOOL == 2))
data_filtered11 <-  mutate(data_filtered10, Seniors = sum(AGE > 64)) # Number of Children (Below the age of 18)
